// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package newrmiserverdemo;

public final class PowerServiceServer_Stub
    extends java.rmi.server.RemoteStub
    implements newrmiserverdemo.PowerService, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_power_0;
    private static java.lang.reflect.Method $method_receive_1;
    private static java.lang.reflect.Method $method_send_2;
    
    static {
	try {
	    $method_power_0 = newrmiserverdemo.PowerService.class.getMethod("power", new java.lang.Class[] {double.class, double.class});
	    $method_receive_1 = newrmiserverdemo.PowerService.class.getMethod("receive", new java.lang.Class[] {});
	    $method_send_2 = newrmiserverdemo.PowerService.class.getMethod("send", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public PowerServiceServer_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of power(double, double)
    public double power(double $param_double_1, double $param_double_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_power_0, new java.lang.Object[] {new java.lang.Double($param_double_1), new java.lang.Double($param_double_2)}, 8506610932128216834L);
	    return ((java.lang.Double) $result).doubleValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of receive()
    public java.util.ArrayList receive()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_receive_1, null, -7087066540070349399L);
	    return ((java.util.ArrayList) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of send(String, String)
    public void send(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_send_2, new java.lang.Object[] {$param_String_1, $param_String_2}, -1138542776021612320L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
